<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Andor Chen</title>
    <description>安道的个人网站</description>
    <link>https://about.ac/</link>
    <atom:link href="https://about.ac/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 28 Apr 2017 12:13:28 +0000</pubDate>
    <lastBuildDate>Fri, 28 Apr 2017 12:13:28 +0000</lastBuildDate>
    <generator>Jekyll v3.4.3</generator>
    
      <item>
        <title>为 Heroku 应用添加 Let's Encrypt SSL 证书</title>
        <description>&lt;div class=&quot;alert alert-info&quot;&gt;
&lt;p&gt;&lt;strong&gt;2017 年 4 月 4 日更新：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Heroku 已经提供&lt;a href=&quot;https://devcenter.heroku.com/articles/automated-certificate-management&quot; title=&quot;Automated Certificate Management&quot;&gt;自动证书管理&lt;/a&gt;工具，能自动申请和续订 Let's Encrypt SSL 证书，无需再使用本文所述的方法自己动手操作。&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;按：经过一番折腾，终于为一个运行在 Heroku 中的 Rails 应用添加了 Let’s Encrypt SSL 证书。做个记录，备查。&lt;/p&gt;

&lt;p&gt;我有一个应用运行在 Heroku 中，为了兑现去年的承诺，元旦假期过后便着手为它添加 SSL 证书。首先想到的是 &lt;a href=&quot;https://letsencrypt.org/&quot; title=&quot;Let’s Encrypt&quot;&gt;Let’s Encrypt&lt;/a&gt;，毕竟免费。&lt;/p&gt;

&lt;p&gt;在 Google 中搜索之后，找到了 &lt;a href=&quot;https://github.com/pixielabs/letsencrypt-rails-heroku&quot; title=&quot;letsencrypt-rails-heroku&quot;&gt;letsencrypt-rails-heroku&lt;/a&gt; gem。看介绍，过程很简单，而且能自动重新签发。所以，我选定了它。&lt;/p&gt;

&lt;h3&gt;使用 letsencrypt-rails-heroku gem&lt;/h3&gt;

&lt;p&gt;首先，把 letsencrypt-rails-heroku gem 添加到 &lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt; 中，然后 &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle install&lt;/code&gt;。按照说明添加 &lt;code class=&quot;highlighter-rouge&quot;&gt;Letsencrypt::Middleware&lt;/code&gt; 中间件，再配置几个环境变量。最后，把应用部署到 Heroku 中。&lt;/p&gt;

&lt;p&gt;至此，一切顺利。但是执行签发证书的命令时遇到了问题：&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;heroku run rake letsencrypt:renew
Running rake letsencrypt:renew on ⬢ yourapp... ⣷ connecting, run.1234
Creating account key...Done!
Registering with LetsEncrypt...Done!
Setting config vars on Heroku...Done!
Giving config vars &lt;span class=&quot;nb&quot;&gt;time &lt;/span&gt;to change...Done!
Testing filename works &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;to bring up app&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;...done!
Problem verifying challenge.
Status: pending, Error:
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;执行这个命令很多遍，得到的结果都是一样，而且并没有详细的错误说明。接下来，我换用官方推荐的 &lt;a href=&quot;https://certbot.eff.org/&quot; title=&quot;certbot&quot;&gt;certbot&lt;/a&gt;，试试行不行。&lt;/p&gt;

&lt;h3&gt;使用 certbot&lt;/h3&gt;

&lt;p&gt;首先，安装 certbot：&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;brew install certbot
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;然后手动签发：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo certbot certonly --manual
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;根据提示输入电子邮件地址和域名，然后修改控制器，添加一个响应 GET &lt;code class=&quot;highlighter-rouge&quot;&gt;/.well-known/acme-challenge/:id&lt;/code&gt; URL 的动作，渲染纯文本。详情参见&lt;a href=&quot;http://collectiveidea.com/blog/archives/2016/01/12/lets-encrypt-with-a-rails-app-on-heroku&quot; title=&quot;这篇文章&quot;&gt;这篇文章&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;但是验证阶段无法通过，提示 DNS A 记录查询失败。&lt;/p&gt;

&lt;p&gt;要知道，Heroku 中的应用绑定的是 CNAME 记录。正是这个错误消息误导了我，让我花了很多时间纠缠 CNAME 记录的问题。&lt;/p&gt;

&lt;p&gt;随后我又试了 dns 验证（之前是 http 验证），还是不行，提示 DNS 查询超时。&lt;/p&gt;

&lt;p&gt;这个工具不行，那就再换一个。我依稀记得有个工具叫 &lt;a href=&quot;https://github.com/Neilpang/acme.sh&quot; title=&quot;acme.sh&quot;&gt;acme.sh&lt;/a&gt;。&lt;/p&gt;

&lt;h3&gt;使用 acme.sh&lt;/h3&gt;

&lt;p&gt;按照说明安装好 acme.sh 之后，我用 dns 验证试了一下：&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;acme.sh --issue --dns -d example.com
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;按照提示设定一条 TXT 记录，等待一会之后（让 DNS 生效），执行：&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;acme.sh --renew -d example.com
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;还是无法通过验证，日志中给出的消息是“Dns not added”。不过，在日志中，我看到有一个指向 Let’s Encrypt API 的 URL。打开一看，正是我的验证详情。&lt;/p&gt;

&lt;p&gt;至此，结合 certbot 给出的错误消息，我觉得可能是 DNS 有问题。经过一番搜索，我发现自己并不孤独，有很多人都遇到类似的问题，而且巧的是，部分人用的是 DNSPod，说换了其他 DNS 服务就好了。&lt;/p&gt;

&lt;h3&gt;更换 DNS&lt;/h3&gt;

&lt;p&gt;死马当活马医。我把域名的 DNS 从 DNSPod 换到了 he.net。等待一夜之后，新的记录仍未生效，导致网站无法访问。随后，我又从 he.net 换到了 NameCheap。不到半小时，记录就生效了。&lt;/p&gt;

&lt;h3&gt;回到 letsencrypt-rails-heroku gem&lt;/h3&gt;

&lt;p&gt;certbot 和 acme.sh 都是很方便的工具，但是 letsencrypt-rails-heroku gem 跟 Heroku 集成得更好。所以更换 DNS 之后，我首先尝试的，还是它。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;heroku run rake letsencrypt:renew
Running rake letsencrypt:renew on ⬢ yourapp... up, run.8151
Creating account key...Done!
Registering with LetsEncrypt...Done!
Performing verification &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;cs.about.ac:
Setting config vars on Heroku...Done!
Giving config vars &lt;span class=&quot;nb&quot;&gt;time &lt;/span&gt;to change...Done!
Testing filename works &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;to bring up app&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;...Done!
Giving LetsEncrypt some &lt;span class=&quot;nb&quot;&gt;time &lt;/span&gt;to verify...Done!

Adding new certificate...Done!
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;一次成功！&lt;/p&gt;

&lt;p&gt;随后，添加&lt;a href=&quot;https://elements.heroku.com/addons/scheduler&quot; title=&quot;定时任务&quot;&gt;定时任务&lt;/a&gt;，每隔一段时间重新签发证书。&lt;/p&gt;

&lt;h3&gt;后续配置&lt;/h3&gt;

&lt;p&gt;证书签发好之后，要按照 Heroku 的说明，把自定义域名指向新的地址：&lt;code class=&quot;highlighter-rouge&quot;&gt;example.com.herokudns.com&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;还要配置 Rails 应用，在生产环境强制使用 SSL：&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# config/environments/production.rb&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;force_ssl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果使用邮件程序，还要把协议修改成 &lt;code class=&quot;highlighter-rouge&quot;&gt;https&lt;/code&gt;：&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# config/environments/production.rb&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;action_mailer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;default_url_options&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;host: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'example.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;protocol: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'https'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Wed, 04 Jan 2017 00:00:00 +0000</pubDate>
        <link>https://about.ac/2017/01/letsencrypt.html</link>
        <guid isPermaLink="true">https://about.ac/2017/01/letsencrypt.html</guid>
        
        <category>Dev</category>
        
        <category>Rails</category>
        
        
      </item>
    
      <item>
        <title>2016 年</title>
        <description>&lt;p&gt;今年自由翻译生活结束，又走上了工作岗位。在此之前，翻译了以下几本书：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/books/restful-rails-development/&quot; title=&quot;RESTful Rails Development&quot;&gt;RESTful Rails Development&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/books/fluent-python/&quot; title=&quot;Fluent Python&quot;&gt;Fluent Python&lt;/a&gt;（合译）&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/books/learning-php/&quot; title=&quot;Learning PHP&quot;&gt;Learning PHP&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/books/building-tools-with-github/&quot; title=&quot;GitHub 实践&quot;&gt;GitHub 实践&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/books/learning-swift/&quot; title=&quot;Learning Swift&quot;&gt;Learning Swift&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;此外，《&lt;a href=&quot;http://railstutorail-china.org&quot; title=&quot;Ruby on Rails 教程（原书第 4 版）&quot;&gt;Ruby on Rails 教程（原书第 4 版）&lt;/a&gt;》由图灵教育引进了，于是我 11 月末到 12 月初对之前的译稿做了全面修订。该书纸质版预计明年上半年出版。&lt;/p&gt;

&lt;p&gt;年末启动了《&lt;a href=&quot;http://rails.guide&quot; title=&quot;Rails 指南&quot;&gt;Rails 指南&lt;/a&gt;》众筹，目前正在与 chinakr 一起翻译中，预计明年三四月份翻译完。&lt;/p&gt;

&lt;p&gt;Rails 指南之后，我手上还有两本书要翻译。因为有日常工作，加上明年准备考研，如无意外不再接翻译的活了。&lt;/p&gt;

&lt;p&gt;明年的计划是：考研（专硕）。我向来不在意学历，但是评职称这是硬性要求，虽然我也不在意职称“头衔”，但是工资与职称挂钩，而我向来不视金钱为粪土，所以最终决定，还是得考。&lt;/p&gt;
</description>
        <pubDate>Sat, 31 Dec 2016 00:00:00 +0000</pubDate>
        <link>https://about.ac/2016/12/2016.html</link>
        <guid isPermaLink="true">https://about.ac/2016/12/2016.html</guid>
        
        <category>Life</category>
        
        
      </item>
    
      <item>
        <title>规范专有名词的拼写</title>
        <description>&lt;p&gt;最近看了一些书和网文，发现专有名词的拼写不太规范。我所说的“专有名词”是指一些网站、服务和程序的名字，如 GitHub、JavaScript、WordPress 等。这些名词经常错误地拼写成 Github、Javascript、Wordpress。&lt;/p&gt;

&lt;p&gt;之所以出现这样的问题，我想主要有两方面的原因。其一，不重视，觉得无所谓，有个字母大小写别人也知道说的是什么。其二，不小心拼错了。&lt;/p&gt;

&lt;p&gt;第一个原因属于态度上的问题，不管哪种拼法只要别人知道是什么就行。试想，如果别人使用同音字（毕竟中文没有大小写）写你的名字，你是什么感受。我就曾经因为这个问题和别人激烈争论过。&lt;/p&gt;

&lt;p&gt;第二个原因情有可原，谁人不犯错。但是，检查时要尽量发现这种低级错误。&lt;/p&gt;

&lt;p&gt;其实，我们可以利用某些输入法提供的功能避免这种低级错误。比如我使用的搜狗输入法（非利益相关）就有这样的功能。我设定了几个自定义短语，这样做可以避免不小心输入错误的大小写，还能简化输入，如果想输入 JavaScript，打出 js 再按空格键即可。不要轻视这个问题，小处见真章。&lt;/p&gt;

&lt;figure&gt;
&lt;img src=&quot;/assets/images/figures/sougou.png&quot; alt=&quot;自定义短语&quot; /&gt;
&lt;figcaption&gt;自定义短语&lt;/figcaption&gt;
&lt;/figure&gt;</description>
        <pubDate>Sat, 23 Jul 2016 00:00:00 +0000</pubDate>
        <link>https://about.ac/2016/07/normalize.html</link>
        <guid isPermaLink="true">https://about.ac/2016/07/normalize.html</guid>
        
        <category>Translation</category>
        
        
      </item>
    
      <item>
        <title>为 GitHub 设置 GPG 签名</title>
        <description>&lt;p&gt;GitHub 前几天支持 GPG 签名验证提交了（&lt;a href=&quot;https://github.com/blog/2144-gpg-signature-verification&quot; title=&quot;GPG signature verification&quot;&gt;via&lt;/a&gt;），今天对我的 GitHub 账户做了相应的设置，本文记录过程备考。&lt;/p&gt;

&lt;h3&gt;第 1 步：安装 GPG 命令行工具&lt;/h3&gt;

&lt;p&gt;使用 Homebrew 安装 GPG 命令行工具 gnupg：&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;brew install gpg
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3&gt;第 2 步：生成 GPG 密钥&lt;/h3&gt;

&lt;p&gt;执行下述命令生成 GPG 密钥：&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;gpg --gen-key
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在生成的过程中：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;询问密钥种类时按回车键，选择默认类型（RSA and RSA）；&lt;/li&gt;
  &lt;li&gt;询问密钥大小时，输入“4096”；&lt;/li&gt;
  &lt;li&gt;询问密钥有效期时按回车键，使用默认值，即永不过期；&lt;/li&gt;
  &lt;li&gt;输入“y”确认上述设置；&lt;/li&gt;
  &lt;li&gt;输入真实姓名和电子邮件地址，“Comment”可留空；&lt;/li&gt;
  &lt;li&gt;输入“O”确认；&lt;/li&gt;
  &lt;li&gt;输入保护私钥的密码；&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以上信息设置完毕后，等待程序生成密钥。&lt;/p&gt;

&lt;h3&gt;第 3 步：添加 GPG 公钥&lt;/h3&gt;

&lt;p&gt;执行下述命令，查看可用的 GPG 密钥：&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;gpg --list-keys
/Users/userA/.gnupg/pubring.gpg
-------------------------------
pub   4096R/4A667092 2016-04-16
uid                  Your Name &amp;lt;your-name@gmail.com&amp;gt;
sub   4096R/48E027A6 2016-04-16
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;其中，&lt;code class=&quot;highlighter-rouge&quot;&gt;4A667092&lt;/code&gt; 是 GPG 密钥的 ID。&lt;/p&gt;

&lt;p&gt;执行下属命令，输出指定的 GPG 公钥：&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;gpg --armor --export &amp;lt;GPG-ID&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;把 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;GPG-ID&amp;gt;&lt;/code&gt; 替换成具体的 ID。在输出的内容中，从“—–BEGIN PGP PUBLIC KEY BLOCK—–”复制到“—–END PGP PUBLIC KEY BLOCK—–”。打开 &lt;a href=&quot;https://github.com/settings/keys&quot; title=&quot;GitHub 设置密钥的网页&quot;&gt;GitHub 设置密钥的网页&lt;/a&gt;，粘贴 GPG 密钥。&lt;/p&gt;

&lt;h3&gt;第 4 步：设置 Git&lt;/h3&gt;

&lt;p&gt;最后要设置 Git，让 Git 使用指定的 GPG 密钥，并让 Git 在提交时使用 GPG 密钥签名。&lt;/p&gt;

&lt;p&gt;在 &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.gitconfig&lt;/code&gt; 文件中添加下述设置（如果集中管理 dotfiles，则在相应的文件中添加）：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[user]
  ...
  signingkey = &amp;lt;GPG-ID&amp;gt;
...
[commit]
  gpgsign = true
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3&gt;第 5 步：签名提交&lt;/h3&gt;

&lt;p&gt;按照常规的方式提交，Git 会询问私钥的密码，输入即可。&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git commit -m &lt;span class=&quot;s1&quot;&gt;'&amp;lt;commit message&amp;gt;'&lt;/span&gt;

You need a passphrase to unlock the secret key &lt;span class=&quot;k&quot;&gt;for
&lt;/span&gt;user: &lt;span class=&quot;s2&quot;&gt;&quot;Your Name &amp;lt;your-name@gmail.com&amp;gt;&quot;&lt;/span&gt;
4096-bit RSA key, ID 4A667092, created 2016-04-16

...
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Sat, 16 Apr 2016 00:00:00 +0000</pubDate>
        <link>https://about.ac/2016/04/github-with-gpg-signature.html</link>
        <guid isPermaLink="true">https://about.ac/2016/04/github-with-gpg-signature.html</guid>
        
        <category>Git</category>
        
        
      </item>
    
      <item>
        <title>2015 年</title>
        <description>&lt;p&gt;又到一年一度写年终总结的时候。做自由翻译进入第二个年头了，相关的事情也逐渐进了正轨。&lt;/p&gt;

&lt;p&gt;今年翻译了7本书（按结束的时间顺序）：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/books/java-nutshell-6th/&quot; title=&quot;Java 技术手册（第6版）&quot;&gt;Java 技术手册（第6版）&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/books/js-app-design/&quot; title=&quot;JavaScript Web 应用开发&quot;&gt;JavaScript Web 应用开发&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/books/modern-php/&quot; title=&quot;Modern PHP（中文版）&quot;&gt;Modern PHP（中文版）&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://ember-china.com&quot; title=&quot;ember-cli 入门&quot;&gt;ember-cli 入门&lt;/a&gt;（自出版）&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/books/learning-angularjs/&quot; title=&quot;AngularJS 学习手册&quot;&gt;AngularJS 学习手册&lt;/a&gt;（未出版）&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/books/docker-up-and-running/&quot; title=&quot;Docker 即学即用&quot;&gt;Docker 即学即用&lt;/a&gt;（未出版）&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/books/css-manual-4th/&quot; title=&quot;CSS: The Missing Manual, 4th Edition&quot;&gt;CSS: The Missing Manual, 4th Edition&lt;/a&gt;（未出版）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;其中四本书出版了，也收到了翻译费用，所以生活没有像&lt;a href=&quot;/2014/12/2014.html&quot; title=&quot;2014 年年终总结&quot;&gt;去年那样&lt;/a&gt;“潦倒”。&lt;/p&gt;

&lt;p&gt;至于明年的计划，我定了一个大方向：&lt;/p&gt;

&lt;p&gt;从 Ruby 初级迈向中级！&lt;/p&gt;
</description>
        <pubDate>Thu, 31 Dec 2015 00:00:00 +0000</pubDate>
        <link>https://about.ac/2015/12/2015.html</link>
        <guid isPermaLink="true">https://about.ac/2015/12/2015.html</guid>
        
        <category>Life</category>
        
        
      </item>
    
      <item>
        <title>Ruby on Rails 教程销售报告</title>
        <description>&lt;p&gt;&lt;strong&gt;按&lt;/strong&gt;：今天，《&lt;a href=&quot;http://railstutorial-china.org&quot; title=&quot;Ruby on Rails 教程&quot;&gt;Ruby on Rails 教程&lt;/a&gt;》在线阅读开放了最后两章，至此，整本书都可以&lt;a href=&quot;http://railstutorial-china.org/book&quot; title=&quot;免费在线阅读&quot;&gt;免费在线阅读&lt;/a&gt;。借此机会，总结一下这本书的销售情况。&lt;/p&gt;

&lt;p&gt;《Ruby on Rails 教程（原书第3版）》于 2014 年 10 上线销售电子书，至今已经过去了一年。下表是这一年各月的销售情况。&lt;/p&gt;

&lt;table class=&quot;table table-bordered text-center&quot;&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th class=&quot;text-center&quot; rowspan=&quot;2&quot;&gt;月份&lt;/th&gt;
            &lt;th class=&quot;text-center&quot; colspan=&quot;3&quot;&gt;销量&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;th class=&quot;text-center&quot;&gt;SelfStore&lt;/th&gt;
            &lt;th class=&quot;text-center&quot;&gt;Sellfy&lt;/th&gt;
            &lt;th class=&quot;text-center&quot;&gt;Leanpub&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;&lt;td&gt;2014.10&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;17&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;2014.11&lt;/td&gt;&lt;td&gt;66&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;2014.12&lt;/td&gt;&lt;td&gt;77&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;2015.01&lt;/td&gt;&lt;td&gt;55&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;2015.02&lt;/td&gt;&lt;td&gt;45&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;2015.03&lt;/td&gt;&lt;td&gt;41&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;2015.04&lt;/td&gt;&lt;td&gt;48&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;2015.05&lt;/td&gt;&lt;td&gt;46&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;2015.06&lt;/td&gt;&lt;td&gt;31&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;2015.07&lt;/td&gt;&lt;td&gt;31&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;2015.08&lt;/td&gt;&lt;td&gt;33&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;2015.09&lt;/td&gt;&lt;td&gt;25&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;/tr&gt;
        &lt;tr&gt;&lt;td&gt;2015.10&lt;/td&gt;&lt;td&gt;51&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;在所有销量中，&lt;a href=&quot;https://selfstore.io/products/189&quot; title=&quot;到 SelfStore 购买 Ruby on Rails 教程&quot;&gt;SelfStore&lt;/a&gt; 的贡献最大，在此感谢 &lt;a href=&quot;http://chloerei.com/&quot; title=&quot;Rei&quot;&gt;Rei&lt;/a&gt; 开发的这个网站。此外，本书还在 Sellfy（10 月换成了 &lt;a href=&quot;https://leanpub.com/rails-tutorial-cn&quot; title=&quot;到 Leanpub 购买 Ruby on Rails 教程&quot;&gt;Leanpub&lt;/a&gt;）销售电子书，主要面对说中文的海外用户。&lt;/p&gt;

&lt;p&gt;再次感谢所有购买本书的读者！&lt;/p&gt;
</description>
        <pubDate>Wed, 04 Nov 2015 00:00:00 +0000</pubDate>
        <link>https://about.ac/2015/11/rails-tutorial-report.html</link>
        <guid isPermaLink="true">https://about.ac/2015/11/rails-tutorial-report.html</guid>
        
        <category>eBook</category>
        
        
      </item>
    
      <item>
        <title>ePub 电子书排版最佳实践</title>
        <description>&lt;p&gt;在制作《&lt;a href=&quot;http://railstutorial-china.org&quot; title=&quot;Ruby on Rails 教程&quot;&gt;Ruby on Rails 教程&lt;/a&gt;》和《&lt;a href=&quot;http://jekyll-china.com/book/&quot; title=&quot;Jekyll 小书&quot;&gt;Jekyll 小书&lt;/a&gt;》电子书的过程中，积累了一些经验，班门弄斧，姑且称之为“最佳实践”吧。&lt;/p&gt;

&lt;h2&gt;没有“页”这个概念&lt;/h2&gt;

&lt;p&gt;这是大前提，制作 ePub 电子书时一定要谨记这一点。ePub 电子书是“流式”的，不像实体书和 PDF 电子书那样有“页”这个概念。因此，很多效果或功能在 ePub 电子书中实现不了，比如说页眉和页码等（ePub 阅读器通常会在屏幕上部实现“页眉”，显示当前查看的书名和章节名；而且也会“分页”，但对阅读器来说，这个页与实体书的页并不一样）。&lt;/p&gt;

&lt;p&gt;因为没有页码，书中的交叉引用不能简单地使用“参见 XX 页”，而要链接到章节名或章节序号。&lt;/p&gt;

&lt;h2&gt;ePub 文件是小型的静态网站&lt;/h2&gt;

&lt;p&gt;这也是一个核心概念。你可以把 ePub 电子书的扩展名改为 &lt;code class=&quot;highlighter-rouge&quot;&gt;.zip&lt;/code&gt;，然后解压。你会看到解压得到的基本上就是个简单的静态网站：有 XHTML 文件，有图像，有样式表。如下所示：&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;├── META-INF/
├── OEBPS
│   ├── chapter1.xhtml
│   ├── chapter2.xhtml
│   ├── chapter3.xhtml
│   ├── cover.jpg
│   ├── epub.css
│   ├── images/
│   ├── package.opf
│   └── toc.ncx
└── mimetype
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;当然，这个网站与我们平常所说的网站有所不同，这是由 Web 浏览器与 ePub 阅读器之间的功能差异造成的。例如，在 ePub 电子书中基本不能使用 JavaScript，对 SVG 的支持有限，只能使用部分 CSS 属性。不过，ePub 电子书可以嵌入字体。&lt;/p&gt;

&lt;h2&gt;交叉引用&lt;/h2&gt;

&lt;p&gt;交叉引用是指引用书内的某个部分，比如“参见 1.2.3 节”，“如图 2.7”，等等。交叉引用最好加上链接，因为电子书不像实体书那样可以来回翻阅，加入链接便于读者定位所引用的内容。&lt;/p&gt;

&lt;h2&gt;提供目录&lt;/h2&gt;

&lt;p&gt;ePub 阅读器一般都会使用特殊的交互方式显示目录，但不会自己去解析内容，再生成目录。所以我们要在 ePub 文件中加入目录，让阅读器读取。如果内容较多，想显示次级目录，比如“3.2 节”，一定要设定目录的层级，不要把所有目录都放在相同的层级。指定目录层级的方式是，在 &lt;code class=&quot;highlighter-rouge&quot;&gt;navPoint&lt;/code&gt; 元素中嵌套 &lt;code class=&quot;highlighter-rouge&quot;&gt;navPoint&lt;/code&gt; 元素，如下所示：&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;navMap&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;navPoint&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ch1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;navLabel&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;text&amp;gt;&lt;/span&gt;第 1 章&lt;span class=&quot;nt&quot;&gt;&amp;lt;/text&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/navLabel&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;content&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ch1.html#ch_1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;navPoint&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;h2&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ch_1_1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;navLabel&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;text&amp;gt;&lt;/span&gt;1.1 节&lt;span class=&quot;nt&quot;&gt;&amp;lt;/text&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/navLabel&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;content&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ch1.html#ch_1_1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/navPoint&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/navPoint&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;navPoint&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ch2&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;navLabel&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;text&amp;gt;&lt;/span&gt;第 2 章&lt;span class=&quot;nt&quot;&gt;&amp;lt;/text&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/navLabel&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;content&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ch2.html#ch_2&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/navPoint&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/navMap&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2&gt;不要把整本书都放在一个 XHTML 文件里&lt;/h2&gt;

&lt;p&gt;一本书的内容有长有短，但是，不管多长，建议一章放在一个 XHTML 文件里，不要把整本书都放在一个 XHTML 文件里。如果都放在一个文件里，ePub 阅读器解析的速度会变慢。&lt;/p&gt;

&lt;h2&gt;重置默认样式&lt;/h2&gt;

&lt;p&gt;ePub 阅读器就像 Web 浏览器一样，会内置默认的样式。为了更好的掌控，实现较为统一的视觉效果，建议在样式表开头重置样式。比如说：&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;applet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;iframe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;h3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;h4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;h5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;h6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;blockquote&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;pre&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;abbr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;acronym&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;big&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;cite&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;del&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;dfn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;em&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;font&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;ins&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;kbd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;samp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;small&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;strike&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;sup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;tt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;dl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;dd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;ol&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;fieldset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;legend&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;caption&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;tbody&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;tfoot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;thead&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;td&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;outline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;vertical-align&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;baseline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;transparent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2&gt;按章“换页”&lt;/h2&gt;

&lt;p&gt;ePub 电子书虽然没有“页”这个概念，却可以换页（严格来说应该是“换屏”）。从视觉上来看，换页就是新起一屏显示内容，让相对独立的内容（例如两章）不连在一起。一般来说，建议每章结束后换页，使用下述 CSS 代码实现：&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.chapter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;page-break-after&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;always&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2&gt;字体&lt;/h2&gt;

&lt;p&gt;ePub 阅读器底层的操作系统（例如 iOS，Android 和各种定制的 ROM）往往会提供不同的字体，因此不能期望读者的系统中一定有某个字体。设置字体时要指定通用字体族（&lt;code class=&quot;highlighter-rouge&quot;&gt;serif&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;sans-serif&lt;/code&gt; 或 &lt;code class=&quot;highlighter-rouge&quot;&gt;monospace&lt;/code&gt;），让阅读器或底层系统判断要使用哪个字体。当然，我们也可以指定各种系统中常用的字体，提供更好的阅读体验。&lt;/p&gt;

&lt;p&gt;如果十分想保持一致的阅读体验，还可以使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;@font-face&lt;/code&gt; 嵌入字体。但是要考虑嵌入的字体会不会让电子书的体积变得特别大，影响传输速度。&lt;/p&gt;

&lt;p&gt;如果指定了字体，而不是让阅读器自行判断该使用哪个字体，在 iBooks 中会遇到一个问题：没使用指定的字体。这个问题的解决方法是，在 &lt;code class=&quot;highlighter-rouge&quot;&gt;.opf&lt;/code&gt; 文件中加入下述元素：&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ibooks:specified-fonts&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;true&lt;span class=&quot;nt&quot;&gt;&amp;lt;/meta&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;添加这个属性后，你会发现，在 iBooks 的外观设置中，字体项目下多了一个“Original”。这个选项的意思是，使用电子书中指定的字体。&lt;/p&gt;

&lt;figure&gt;
&lt;img src=&quot;/assets/images/figures/ibooks-fonts.png&quot; alt=&quot;让 iBooks 使用指定的字体&quot; /&gt;
&lt;figcaption&gt;让 iBooks 使用指定的字体&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2&gt;字号&lt;/h2&gt;

&lt;p&gt;我想你一定有这样的经历——调整电子书的文字大小。这种情况经常出现，因此，不要使用固定字号，例如 &lt;code class=&quot;highlighter-rouge&quot;&gt;12px&lt;/code&gt;，而要使用便于缩放的字号单位。ePub 电子书的字号一般建议使用百分比为单位，比如 &lt;code class=&quot;highlighter-rouge&quot;&gt;80%&lt;/code&gt;。&lt;/p&gt;

&lt;h2&gt;为标题加序号&lt;/h2&gt;

&lt;p&gt;书中的各级标题往往使用不同于正文的字体和字号显示，但是在手持设备中，字号之间的差异并不明显。为了让读者对一本书的纲要有全局的认识，建议在标题前加上序号，例如：“1.2 二级标题”，“1.2.3 三级标题”。&lt;/p&gt;

&lt;h2&gt;考虑兼容性&lt;/h2&gt;

&lt;p&gt;是的，与浏览器一样，我们也要考虑 ePub 阅读器的兼容性。就我目前的观察，iBooks 对标准的支持是最好的。但我们不能期望所有读者都使用 iOS/OS X 系统。下面举个例子。&lt;/p&gt;

&lt;p&gt;我平常看书喜欢用多看（手机和平板），但是&lt;a href=&quot;/2014/06/duokan-xhtml-entities.html&quot; title=&quot;多看对 XHTML 实体的支持并不好&quot;&gt;多看对 XHTML 实体的支持并不好&lt;/a&gt;，有些特殊的符号显示不出来。这时就要专门针对多看编写样式：&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.symbol&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;'DK-SYMBOL'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DK-SYMBOL&lt;/code&gt; 是多看自带的字体，用于显示一些特殊的字体。&lt;/p&gt;

&lt;h2&gt;其他&lt;/h2&gt;

&lt;p&gt;除了上面列出的几点之外，还有一些推荐的做法，在此不一一展开详述。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;不要定义大块背景色；&lt;/li&gt;
  &lt;li&gt;脚注加上返回链接；&lt;/li&gt;
  &lt;li&gt;尽量不使用某个阅读器专属的功能；&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 13 Sep 2015 00:00:00 +0000</pubDate>
        <link>https://about.ac/2015/09/epub-best-practices.html</link>
        <guid isPermaLink="true">https://about.ac/2015/09/epub-best-practices.html</guid>
        
        <category>eBook</category>
        
        
      </item>
    
      <item>
        <title>在电子书中渲染公式</title>
        <description>&lt;p&gt;昨天更新了《&lt;a href=&quot;http://railstutorial-china.org&quot; title=&quot;Ruby on Rails 教程&quot;&gt;Ruby on Rails 教程&lt;/a&gt;》，这次更新最大的变化是对公式的处理方式。这本书有一节用了几个公式，我使用的电子书工具链之前不支持转换公式，所以只能做些简单的处理：使用上下标。后来越看越不舒服，因此前几天抽空实现了 LaTex 式的显示效果。&lt;/p&gt;

&lt;p&gt;公式一直是我的电子书工具链所缺乏的功能之一，我也一直想解决，不过苦于没有合适的方法。前几天，O’Reilly 电子书方面的负责人（Sanders Kleinfeld）分享了&lt;a href=&quot;http://diagramcenter.org/webinars.html#mmlc&quot; title=&quot;他们的处理方式&quot;&gt;他们的处理方式&lt;/a&gt;，勾起了我解决这个问题的欲望。&lt;/p&gt;

&lt;p&gt;按照 Sanders 的分享，我首先尝试使用 &lt;a href=&quot;https://www.mathmlcloud.org/&quot; title=&quot;MathML Cloud&quot;&gt;MathML Cloud&lt;/a&gt;。不过这个服务提供的 API 不规范，尝试过程中多次遇到问题。这个服务的实现方式是&lt;a href=&quot;https://github.com/benetech/mmlc-api&quot; title=&quot;开源&quot;&gt;开源&lt;/a&gt;的，不过自己搭建很麻烦，又是 MongoDB，又是 Redis 的，所以我放弃了这个方案。&lt;/p&gt;

&lt;p&gt;随后我试着搜索，看有没有纯 Ruby 的解决方案，毕竟我的工具链是使用 Ruby 编写的。在 GitHub 中搜索，找到了 &lt;a href=&quot;https://github.com/gjtorikian/mathematical&quot; title=&quot;mathematical&quot;&gt;mathematical&lt;/a&gt;。这个 gem 为了提升“速度”，用了两个 C 语言扩展。正是这两个扩展让我放弃使用这个 gem。因为用到了 C 扩展，所以安装之前要先安装一些库，不过对于“新手”来说，这个过程像念咒语一样，根本不得要领，开发者说安装什么跟着做就是了，然而有时跟着做也没用。环境的差异害死人！在这个 gem 开发者的帮助下，成功编译了 C 扩展，可是使用过程中又遇到了问题：无法生成 SVG 和 png 图像。自己尝试解决无果后，我就放弃了这个 gem。&lt;/p&gt;

&lt;p&gt;这时，我又想起了 MathML Cloud，既然这个服务的实现方式是开源的，不妨看看它是如何渲染公式的。看了&lt;a href=&quot;https://github.com/benetech/mmlc-api/blob/1daa756cc68a2ab5b535410b3f968c9257e2400c/package.json#L26&quot; title=&quot;代码&quot;&gt;代码&lt;/a&gt;，发现 MathML Cloud 使用的是 &lt;a href=&quot;https://github.com/mathjax/MathJax-node&quot; title=&quot;MathJax-node&quot;&gt;MathJax-node&lt;/a&gt;。&lt;a href=&quot;https://www.mathjax.org/&quot; title=&quot;MathJax&quot;&gt;MathJax&lt;/a&gt; 应该是目前最成熟的公式解决方案，既然有 Node.js 版，集成到我的工具链中就不难了，因为 MathJax-node 提供了 CLI。经过一番编程之后，最终顺利把 MathJax-node 集成到我的工具链中。&lt;/p&gt;

&lt;p&gt;目前我是这样处理公式的：书稿中使用 LaTex 句法写公式（纯文本，便于管理），生成电子书时为不同的电子书格式生成不同格式的图像&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;PDF 和 HTML 格式用 SVG&lt;/li&gt;
  &lt;li&gt;ePub 和 mobi 格式用 png&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这么做遵循了“渐进增强”原则，因为 PDF 骨子里就是“矢量”的，最适合使用 SVG，而且目前大多数主流浏览器都支持 SVG，所以 HTML 格式也用了 SVG。但是 ePub 阅读器和 Kindle 等对 SVG 的支持并不好，只能使用图像；虽然缩放时的体验不好，但是至少还能辨识公式的内容。&lt;/p&gt;

&lt;p&gt;P.S. 我的电子书工具链是 &lt;a href=&quot;https://rubygems.org/gems/persie&quot; title=&quot;persie&quot;&gt;persie&lt;/a&gt;。这个工具之前是开源的，现在已经闭源，不过以前的版本仍然可以下载安装。&lt;/p&gt;
</description>
        <pubDate>Fri, 14 Aug 2015 00:00:00 +0000</pubDate>
        <link>https://about.ac/2015/08/stem.html</link>
        <guid isPermaLink="true">https://about.ac/2015/08/stem.html</guid>
        
        <category>eBook</category>
        
        
      </item>
    
      <item>
        <title>docx 文件脚注的编号</title>
        <description>&lt;p&gt;最近，使用 &lt;a href=&quot;http://pandoc.org/&quot; title=&quot;pandoc&quot;&gt;pandoc&lt;/a&gt; 生成 docx 文件遇到一个问题。默认情况下，一个文档中的所有脚注是按顺序标号的。这其实没什么问题，因为“语义”上讲，这就是正确的编号方法。但是，我想实现的是“按章”编号。&lt;/p&gt;

&lt;p&gt;我之前已经从样式上区别了各章（方法参见《&lt;a href=&quot;/2015/06/docx-hack-guide.html&quot; title=&quot;docx 文件定制指南&quot;&gt;docx 文件定制指南&lt;/a&gt;》），即在一级标题之前换页。这只是“表面功夫”，Word 看到的仍是一个没有结构划分的文档。为了实现脚注按章编号，首先要想办法让 Word 知道每一章在哪里开始，在哪里结束，也就是从“语义”上实现分章。&lt;/p&gt;

&lt;p&gt;其实 Word 提供了这种功能——分节。不过在代码层级，实现起来有点复杂。根据 WordProcessingML 的定义，文档最后一节的相关属性在 &lt;code class=&quot;highlighter-rouge&quot;&gt;w:body&lt;/code&gt; 元素中最后一个 &lt;code class=&quot;highlighter-rouge&quot;&gt;w:sectPr&lt;/code&gt; 元素中定义，而之前每一节的相关属性都在各节最后一个段落（&lt;code class=&quot;highlighter-rouge&quot;&gt;w:p&lt;/code&gt;）的属性中定义，如下述代码所示：&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;w:body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!--第一节--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;w:p&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/w:p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;w:p&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/w:p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;w:p&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;w:pPr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;w:sectPr&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/w:sectPr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/w:pPr&amp;gt;&lt;/span&gt;
        ...
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/w:p&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;&amp;lt;!--第二节--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;w:p&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/w:p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;w:p&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/w:p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;w:p&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;w:pPr&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;w:sectPr&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/w:sectPr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/w:pPr&amp;gt;&lt;/span&gt;
        ...
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/w:p&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;&amp;lt;!--最后一节--&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;w:p&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/w:p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;w:p&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/w:p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;w:p&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/w:p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;w:sectPr&amp;gt;&lt;/span&gt;
        ...
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/w:sectPr&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/w:body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;pandoc 所用的模板没有为最后一节指定任何属性，即只有 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;w:sectPr/&amp;gt;&lt;/code&gt;。所以，要想办法设置最后一节的属性，还要在每个一级标题之前的段落属性里插入 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;w:sectPr&amp;gt;&lt;/code&gt; 元素。这个好办，使用相关的 XML 处理库就行。如果使用 Ruby，可以用 &lt;a href=&quot;https://rubygems.org/gems/nokogiri&quot; title=&quot;nokogiri&quot;&gt;nokogiri&lt;/a&gt;。XML 的具体处理方法本文不再赘述。&lt;/p&gt;

&lt;p&gt;不过，要如何设置每一节的属性才能让脚注按章编号呢？按照 WordProcessingML 的定义，脚注的属性放在 &lt;code class=&quot;highlighter-rouge&quot;&gt;w:footnotePr&lt;/code&gt; 元素中，控制编号方式的是 &lt;code class=&quot;highlighter-rouge&quot;&gt;w:numRestart&lt;/code&gt; 元素。这个元素的值可以设为下述三个值中的一个：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;continuous&lt;/code&gt;（默认值）&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;eachSect&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;eachPage&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;从上可以看出，我们需要把这个元素的值设为 &lt;code class=&quot;highlighter-rouge&quot;&gt;eachSect&lt;/code&gt;，即开始新的一节时重新从头开始为脚注编号。最终设置的 &lt;code class=&quot;highlighter-rouge&quot;&gt;w:sectPr&lt;/code&gt; 如下：&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;w:sectPr&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;w:footnotePr&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;w:numRestart&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;w:val=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;eachSect&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/w:footnotePr&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/w:sectPr&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果想每页单独编号，可以把 &lt;code class=&quot;highlighter-rouge&quot;&gt;w:numRestart&lt;/code&gt; 的值设为 &lt;code class=&quot;highlighter-rouge&quot;&gt;eachPage&lt;/code&gt;。&lt;/p&gt;
</description>
        <pubDate>Mon, 03 Aug 2015 00:00:00 +0000</pubDate>
        <link>https://about.ac/2015/08/docx-footnotes-numbering.html</link>
        <guid isPermaLink="true">https://about.ac/2015/08/docx-footnotes-numbering.html</guid>
        
        <category>Dev</category>
        
        
      </item>
    
      <item>
        <title>翻译时对网址的处理</title>
        <description>&lt;p&gt;科技类书籍一般都会在文中使用链接，电子书排版时可以直接以“链接”的形式给出，但是出版纸质书时则要把链接的地址写入行间。这就牵涉到排版的问题，为了便于排版，节省空间，较长的网址一般会使用短网址形式给出。外文书经常使用的短网址服务是 bit.ly。众所周知，这个网站在国内是无法访问的，因此翻译时要做些处理。&lt;/p&gt;

&lt;p&gt;我目前的做法是，找到 bit.ly 短网址对应的原网址，然后使用国内的短网址服务（例如 dwz.cn）重新创建短网址。但是这么做也会遇到一些问题。例如，有些网址包含特定的“词”，国内的短网址服务拒绝提供服务。遇到这种情况，我一般直接给出原地址。还有一种常见的问题是，原网址本身也无法访问。至于无法访问的原因，无外乎三种：其一，原网址由于某些原因在国内无法访问；其二，原网址对应的页面已经不存在；其三，原网址对应的页面换用了其他网址。&lt;/p&gt;

&lt;p&gt;对第一类网址来说，比较好的方式是，转载原文，放到国内用户能访问的网站中。不过，这又会带来一些问题，比如说，版权问题，工作量问题。所以，遇到这类网址，目前我不会做任何处理，祈求读者有科学上网的途径。对第二类网址来说，可以使用网页缓存服务，例如 &lt;a href=&quot;https://archive.org&quot; title=&quot;https://archive.org&quot;&gt;https://archive.org&lt;/a&gt;。对第三类网址来说，建议找出新地址。有人可能觉得这么做“不忠于原文”，但要知道，翻译是“再创作”，创作的基础虽然是原文，但原文是有“时限”的。在这方面，计算机技术表现的最为突出，正所谓“出版就过时”，有时甚至更糟，“写着后文，前文就过时了”。翻译时，时间已经向后推移了，为了给读者提供翻译当下最正确的资讯，当然要使用最新的网址。&lt;/p&gt;

</description>
        <pubDate>Thu, 30 Jul 2015 00:00:00 +0000</pubDate>
        <link>https://about.ac/2015/07/translate-urls.html</link>
        <guid isPermaLink="true">https://about.ac/2015/07/translate-urls.html</guid>
        
        <category>Translation</category>
        
        
      </item>
    
  </channel>
</rss>
